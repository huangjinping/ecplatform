<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cooperlink.ecplatform.petstore.camera.persistence.mapper.PetCameraMapper">
 <resultMap id="BaseResultMap" type="cn.cooperlink.ecplatform.petstore.camera.entity.Camera">
  <id column="ID" property="id" jdbcType="BIGINT" />
  <result column="NAME" property="name" jdbcType="VARCHAR" />
  <result column="IP" property="IP" jdbcType="VARCHAR" />
  <result column="PORT" property="port" jdbcType="INTEGER" />
  <result column="AUTH_USERNAME" property="auth_username" jdbcType="VARCHAR" />
  <result column="AUTH_PASSWORD" property="auth_password" jdbcType="VARCHAR" />
  <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
  <result column="ENABLE" property="enable" jdbcType="BIT" />
  <result column="CAGE" property="cage"	jdbcType="VARCHAR" />
  <result column="BINDING" property="binding"	jdbcType="BIT" />


  <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
  <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
  <result column="CREATE_BY" property="createBy" jdbcType="BIGINT" />
  <result column="UPDATE_BY" property="updateBy" jdbcType="BIGINT" />
 </resultMap>

 <sql id="Base_Column_List">
  c.ID as ID, c.NAME as NAME, c.IP as IP, c.PORT as PORT,
  c.AUTH_USERNAME as AUTH_USERNAME, c.AUTH_PASSWORD as AUTH_PASSWORD, c.DESCRIPTION as DESCRIPTION,
  c.ENABLE as ENABLE, c.CAGE as CAGE, c.BINDING as BINDING,c.CREATE_TIME as CREATE_TIME, c.UPDATE_TIME as UPDATE_TIME,
  c.CREATE_BY as CREATE_BY, c.UPDATE_BY as UPDATE_BY
 </sql>

 <!-- 插入单条数据 -->
 <insert id="save" parameterType="cn.cooperlink.ecplatform.petstore.camera.entity.PetCamera">
  INSERT INTO ps_pet_camera (PET_ID, CAM_ID)
  VALUES (#{pet_id,jdbcType=BIGINT},#{cam_id,jdbcType=BIGINT})
 </insert>

 <!-- 批量插入 -->
 <insert id="saveBatch" parameterType="java.util.List">
  INSERT INTO ps_pet_camera (PET_ID, CAM_ID)
  VALUES
  <foreach collection="list" separator="," item="item">
   (
   (#{item.pet_id,jdbcType=BIGINT}, #{item.cam_id,jdbcType=BIGINT})
   )
  </foreach>
 </insert>

 <!-- 删除数据 -->
 <delete id="delete" parameterType="java.lang.Long">
  DELETE FROM ps_pet_camera
  WHERE id = #{id,jdbcType=BIGINT}
 </delete>

 <!-- 批量删除 -->
 <delete id="deleteBatch" parameterType="java.util.List">
  DELETE FROM ps_pet_camera WHERE ID IN
  <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
   #{item}
  </foreach>
 </delete>
 
 <!-- 删除数据 -->
 <delete id="deletePetCamera" parameterType="map">
  DELETE FROM ps_pet_camera
  WHERE PET_ID=#{pet_id,jdbcType=BIGINT} AND CAM_ID=#{cam_id,jdbcType=BIGINT}
 </delete>

 <!-- 查询单条数据 -->
 <select id="getSingle" resultMap="BaseResultMap" parameterType="java.lang.Long">
  SELECT
  <include refid="Base_Column_List" />
  FROM ps_pet_camera p
  WHERE p.id = #{id,jdbcType=BIGINT}
 </select>

 <!-- 查询我的摄像头列表 -->
 <select id="getMyCamera" resultMap="BaseResultMap" parameterType="java.lang.Long">
  SELECT
  <include refid="Base_Column_List" />
  FROM ps_member_pet pm,ps_pet p,ps_pet_camera pc,ps_camera c
  WHERE pm.PET_ID=p.ID AND p.ID=pc.PET_ID AND pc.CAM_ID=c.ID AND pm.MEM_ID = #{id,jdbcType=BIGINT}
 </select>

 <!-- 根据摄像头ID查询消息关系列表 -->
 <select id="getPetCameraByCamId" resultType="map">
  SELECT
  pc.ID as id,
  pc.PET_ID as pet_id,
  pc.CAM_ID as cam_id
  FROM ps_pet_camera pc
  WHERE pc.CAM_ID = #{id,jdbcType=BIGINT}
 </select>
 
 <!-- 根据宠物ID查询消息关系列表 -->
 <select id="getPetCameraByPetId" resultType="map">
  SELECT
  mm.ID as id,
  mm.PET_ID as pet_id,
  mm.CAM_ID as cam_id
  FROM ps_pet_camera pc
  WHERE pc.CAM_ID = #{id,jdbcType=BIGINT}
 </select>

 <!-- 统计记录数 -->
 <select id="count" resultType="long" parameterType="map">
  SELECT count(1) FROM ps_camera c
 </select>
</mapper>